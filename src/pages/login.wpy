<template>
    <view class="text-center house-wrap">
        <image class="house" src="/imgs/house.png"/>
    </view>
    <view class="input-area text999 fz28">
        <input class="textInput" placeholder="请输入商户帐号/手机账号" @input="setField('username')"/>
        <view class="passworkBox">
            <input wx:if="{{isShowPassword}}" class="passwordInput" placeholder="请输入商户密码" type="password"
                   value="{{password}}" @input="setField('password')"/>
            <input wx:else class="passwordInput" placeholder="请输入商户密码" type="text" value="{{password}}"
                   @input="setField('password')"/>
            <view @tap.stop="LookPassword">
                <image class="{{isShowPassword?'lookPassword':'lookPassword2'}}"
                       src="{{isShowPassword?'/imgs/eye2.png':'/imgs/eye.png'}}"></image>
            </view>
        </view>
        <view bindtap="gotoAmend" class="forget">忘记密码?</view>
    </view>

    <view class="text-center">
        <button class="btn textfff fz32" type="default" bindtap="doLogin">立即登录</button>
    </view>
</template>

<script>
import wepy from "wepy";
import baseMixin from "../mixins/base";
import utilPage from "../mixins/utilPage";
const appPage = new utilPage({
  data: {
    text: "Page loginAmend",
    username: "",
    password: "",
    isShowPassword: true,
    isSubmit: false
  },
  onLoad(options) {
    this.loadCb();
  },
  onShow() {},
  onPullDownRefresh() {
    let that = this;
  },

  onReachBottom() {
    let that = this;
  },

  onPageScroll(options) {}
});
export default class extends wepy.page {
  constructor(...args) {
    super(...args);
    for (let k in appPage) {
      if (k === "methods") {
        for (let j in appPage[k]) {
          this[k][j] = appPage[k][j];
        }
      } else this[k] = appPage[k];
    }
  }

  mixins = [baseMixin];
  config = {
    navigationBarTitleText: "登录",
    navigationBarBackgroundColor: "#3d70f7",
    backgroundColor: "#fff",
    navigationBarTextStyle: "white"
  };

  loadCb() {}

  methods = {
    setField(field, e) {
      this[field] = e.detail.value;
    },
    doLogin() {
      if (this.data.isSubmit) return;
      let that = this,
        common = that.$azmUtil.common,
        reg = that.$azmUtil.regExpUtil,
        username = that.data.username,
        password = that.data.password;
      if (that.isEmpty(username)) {
        this.$alert("请输入商户帐号");
      } else if (that.isEmpty(password)) {
        this.$alert("请输入商户密码");
      } else {
        this.$azmUtil.showLoading();
        this.isSubmit = true;
        this.ApiService.shopLoing({ username, password })
          .then(res => {
            if (res.status === 1 && common.isEmptyObject(res.info)) {
              let info = res.info,
                emptypwd = info.emptyPwd;
              that.setUserInfo(info.data);
              if (info.hasbindedphone == 1 && emptypwd == 1) {
                that.$azmUtil.go("/pages/alterpwd", { data: { mode: 1 } });
              } else if (!info.hasbindedphone) {
                wx.setStorageSync("hasbindedphone", info.hasbindedphone);
                wx.setStorageSync("emptyPwd", emptypwd);
                that.$azmUtil.go("/pages/bindphone", {
                  data: { emptypwd: emptypwd }
                });
              } else {
                that.$azmUtil.go("/pages/home/index", { type: "blankAll" });
              }
            } else {
              that.$azmUtil.showToast(res.message || "用户名与密码不正确~");
            }
          })
          .finally(res => {
            that.password = "";
            this.isSubmit = false;
            that.$azmUtil.hideLoading();
            that.$apply();
          });
      }
    },
    LookPassword() {
      this.isShowPassword = !this.data.isShowPassword;
      console.log(111111111111111);

    },
    gotoAmend() {
      wx.navigateTo({
        url: "/pages/amend"
      });
    }
  };
}
</script>

<style lang="less">
.house {
  width: 180 * 1rpx;
  height: 180 * 1rpx;
}

.input-area {
  text-align: center;
  margin-bottom: 121 * 1rpx;
}

.textInput {
  width: 670 * 1rpx;
  height: 90 * 1rpx;
  border-radius: 5 * 1rpx;
  border: solid 1px rgba(153, 153, 153, 0.3);
  padding-left: 30 * 1rpx;
  padding-right: 30 * 1rpx;
  margin-bottom: 30 * 1rpx;
  text-align: left;
  display: inline-block;
}

.passworkBox {
  width: 670 * 1rpx;
  height: 90 * 1rpx;
  border-radius: 5 * 1rpx;
  border: solid 1px rgba(153, 153, 153, 0.3);
  margin-left: 40 * 1rpx;
  margin-right: 30 * 1rpx;
  margin-bottom: 30 * 1rpx;
  box-sizing: border-box;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.passwordInput {
  padding-left: 30 * 1rpx;
  text-align: left;
  display: inline-block;
  width: 100%;
}

.house-wrap {
  padding-top: 90 * 1rpx;
  padding-bottom: 79 * 1rpx;
}

button.btn {
  width: 670 * 1rpx;
  height: 90 * 1rpx;
  line-height: 90 * 1rpx;
  border-radius: 5 * 1rpx;
  display: inline-block;
  background-image: linear-gradient(90deg, #35abfe 0%, #3d70f7 100%);
}

.lookPassword {
  width: 34 * 1rpx;
  height: 15 * 1rpx;
  padding-right: 40 * 1rpx;
}

.lookPassword2 {
  width: 37 * 1rpx;
  height: 22 * 1rpx;
  padding-right: 40 * 1rpx;
}

.forget {
  font-size: 32 * 1rpx;
  margin-left: 512 * 1rpx;
  color: #424242;
}
</style>