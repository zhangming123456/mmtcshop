<template>
    <view class="input-area text999 fz28">
        <view class="passworkBox">
            <input wx:if="{{isShowPassword}}" class="passwordInput" value="{{pwd}}" placeholder="8-16位密码，至少使用两种字符组合"
                   @input="bindInputTelephone('pwd')" type="password"/>
            <input wx:else class="passwordInput" value="{{pwd}}" placeholder="8-16位密码，至少使用两种字符组合"
                   @input="bindInputTelephone('pwd')" type="text"/>
            <view @tap.stop="LookPassword">
                <image class="{{isShowPassword?'lookPassword':'lookPassword2'}}"
                       src="{{isShowPassword?'/imgs/eye2.png':'/imgs/eye.png'}}"></image>
            </view>
        </view>
        <view class="login" bindtap="validAffirm">确认</view>
    </view>
    <toast></toast>
</template>

<script>
import wepy from "wepy";
import baseMixin from "../mixins/base";
import toast from "../components/toast";
import utilPage from "../mixins/utilPage";
const appPage = new utilPage({
  data: {
    isShowPassword: true,
    pwd: "",
    code: "",
    phone: "",
    passwordStrength: 0
  },
  onLoad(options) {
    this.loadCb();
  },
  onShow(e) {
    this.onLoad();
  },
  onPullDownRefresh() {
    let that = this;
  },

  onReachBottom() {
    let that = this;
  },

  onPageScroll(options) {}
});
export default class extends wepy.page {
  constructor(...args) {
    super(...args);
    for (let k in appPage) {
      if (k === "methods") {
        for (let j in appPage[k]) {
          this[k][j] = appPage[k][j];
        }
      } else this[k] = appPage[k];
    }
  }

  components = { toast };
  mixins = [baseMixin];
  config = {
    navigationBarTitleText: "修改新的密码",
    navigationBarBackgroundColor: "#3d70f7",
    backgroundColor: "#fff",
    navigationBarTextStyle: "white"
  };

  loadCb() {
    let options = this.data.options;
  }

  methods = {
    bindInputTelephone(key, e) {
      let value = e.detail.value,
        reg = this.$azmUtil.regExpUtil;
      this[key] = value;
      if (key === "pwd") {
        console.log(reg.isPwd(value));
        this.passwordStrength = reg.isPwd(value);
      }
    },
    LookPassword() {
      this.isShowPassword = !this.data.isShowPassword;
    },

    validAffirm() {
      let that = this,
        pwd = this.data.pwd,
        options = this.data.options,
        code = options.code,
        phone = options.phone,
        reg = that.$azmUtil.regExpUtil;
      if (!reg.isPhone(phone)) {
        that.azmShowToast("手机号码格式不正确~");
        return;
      }
      if (this.$azmUtil.trim(code).length !== 6) {
        that.azmShowToast("验证码格式不正确");
        return;
      }
      pwd = that.$azmUtil.trim(pwd);
      if (pwd.length < 8 || pwd.length >= 16) {
        that.azmShowToast("8-16位密码，至少使用两种字符组合");
        return;
      } else if (reg.isPwd(pwd) === 0) {
        that.azmShowToast("密码强度不够~");
        return;
      }
      this.ApiService.getEdit({ pwd, code, phone }).then(res => {
        if (res.status === 1) {
          this.$azmUtil.showToast({
            title: "修改成功",
            success: function() {
              that.$azmUtil.go("/pages/login", { type: "blankAll" });
            }
          });
        } else {
          that.azmShowToast(res.message || "验证码过期");
          that.$azmUtil.go(-1);
        }
      });
    }
  };
}
</script>

<style lang="less">
.passworkBox {
  width: 670 * 1rpx;
  height: 90 * 1rpx;
  border-radius: 5 * 1rpx;
  border: solid 1px rgba(153, 153, 153, 0.3);
  margin-left: 40 * 1rpx;
  margin-right: 30 * 1rpx;
  margin-bottom: 95 * 1rpx;
  box-sizing: border-box;
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-top: 90 * 1rpx;
}

.passwordInput {
  padding-left: 30 * 1rpx;
  text-align: left;
  display: inline-block;
  width: 480 * 1rpx;
}

.house-wrap {
  padding-top: 90 * 1rpx;
  padding-bottom: 79 * 1rpx;
}

.lookPassword {
  width: 34 * 1rpx;
  height: 15 * 1rpx;
  padding-right: 40 * 1rpx;
}

.lookPassword2 {
  width: 37 * 1rpx;
  height: 22 * 1rpx;
  padding-right: 40 * 1rpx;
}

.login {
  width: 670 * 1rpx;
  height: 90 * 1rpx;
  background-image: linear-gradient(90deg, #35abfe 0%, #3d70f7 100%);
  font-size: 32 * 1rpx;
  color: #ffffff;
  line-height: 90 * 1rpx;
  text-align: center;
  margin-left: 40 * 1rpx;
  border-radius: 5 * 1rpx;
}
</style>