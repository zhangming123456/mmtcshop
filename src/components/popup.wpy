
<template>
    <form report-submit="true" @submit="bindSubmit" wx:if="{{close}}" class='azm-components--popup'>
        <view class="azm-mask" @tap="bindClosePopup"></view>
        <view id="azm-popup" class="azm-popup {{show?'fadeInUp animated_0_3':'azm-popup__up fadeOutDown animated_0_3'}}">
            <view class="azm-popup__header"></view>
            <view class="azm-popup__section">
                <view class="azm-popup__section_title">{{message}}</view>
                <view class="azm-popup__section_input">
                    <input class="azm-input" placeholder="例：欧莱雅（美发的产品品牌）" maxlength="40" name="label"
                           cursor-spacing="500" focus="true" value="{{label}}"/>
                </view>
            </view>
            <view class="azm-popup__footer">
                <block wx:if="{{false}}">
                    <button class="azm-btn azm-btn_save" plain="true" size="mini" formType="submit">保存</button>
                    <button class="azm-btn azm-btn_submit" plain="true" size="mini" formType="submit">提交</button>
                </block>
                <block wx:else>
                    <button class="azm-btn" plain="true" formType="submit">确定</button>
                </block>
            </view>                                                                         
        </view>
    </form>
</template>
<script>
import wepy from "wepy";
import baseMixin from "../mixins/base";
import toast from "./toast";
export default class popup extends wepy.component {
  props = {};
  data = {
    close: false,
    show: false,
    label: "",
    interval: null,
    message: ""
  };
  mixins = [baseMixin];
  components = {};

  onLoad() {
    let that = this;
    that.$parent.azmShowPopup = function(options) {
      let data = {};
      if (typeof options === "string") {
        that.message = options;
      } else {
        that.message = options.message;
      }
      that.close = true;
      that.show = true;
      that.label = "";
      clearTimeout(that.data.timeout);
      clearInterval(that.data.interval);
      that.$apply();
    };
    that.$parent.azmHidePopup = function(options) {
      that.closePopup();
    };
  }

  closePopup() {
    let that = this;
    that.show = false;
    that.label = null;
    that.message = null;
    clearInterval(that.data.interval);
    clearTimeout(that.data.timeout);
    that.interval = setInterval(res => {
      that.$azmUtil.getEleScrollOffset("#azm-popup", that).then(res => {
        //                        336
        console.log(res);
        if (res.top >= 603) {
          that.close = false;
          clearInterval(that.data.interval);
          clearTimeout(that.data.timeout);
          that.$apply();
        }
      });
    }, 100);
    that.timeout = setTimeout(res => {
      that.close = false;
      clearInterval(that.data.interval);
      that.$apply();
    }, 300);
    that.$apply();
  }

  watch = {};
  methods = {
    bindSubmit(e) {
      let that = this,
        value = e.detail.value,
        formId = e.detail.formId;
      if (formId === "the formId is a mock one") {
        formId = null;
      }
      value.label = this.$azmUtil.trim(value.label);
      this.$emit("popupSubmit", value, formId, e);
    },
    bindClosePopup() {
      let that = this;
      that.closePopup();
    }
  };
}
</script>

<style lang="less">

</style>