<style lang="less"></style>
<template lang="pug">
    import(src="../../../wxparse/wxParse.wxml")
    block(wx:for="{{htmlParserTpl.nodes}}" wx:key="{{index}}")
        template(is="wxParse0" data="{{item}}")
</template>
<script>
    import wepy from "wepy"
    import WxParse from '../wxparse/wxParse'

    export default class html2wxml extends wepy.component {
        props = {
            parserName: {
                type: String,
                default: "htmlParserName"
            },
            parserContent: {
                type: String,
                default: ""
            },
            parserType: {
                type: String,
                default: "html"
            },
            parserPadding: {
                type: Number,
                default: 5
            }
        }
        data = {
            htmlParserTpl: {}
        }
        events = {
            'htmlParser-broadcast': ($event, ...args) => {
            },
        }
        methods = {
            htmlParserNotice(){
                this.htmlParse();
            }
        }

        async onLoad () {
            this.htmlParse();
        }

        wxParseImgLoad (image) {
            let imgInfo = image.detail;
        }

        htmlParse () {
            /**
             * WxParse.wxParse(bindName , type, data, target,imagePadding)
             * 1.bindName绑定的数据名(必填)
             * 2.type可以为html或者md(必填)
             * 3.data为传入的具体数据(必填)
             * 4.target为Page对象,一般为this(必填)
             * 5.imagePadding为当图片自适应是左右的单一padding(默认为0,可选)
             */
            try {
                let htmlContent = WxParse.wxParse(this.parserName, this.parserType, this.parserContent || this.props.parserContent.default, this, this.parserPadding)
                this.htmlParserTpl = htmlContent[this.parserName]
            } catch (e) {
                console.warn('kinerHtmlParser:', '没有任何内容需要转换', e)
            }
        }
    }
</script>